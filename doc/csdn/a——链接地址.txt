@[TOC](目录)



其他：

[PAT乙级-【题目+解答】汇总](https://blog.csdn.net/qq_34451909/article/details/104811369)

[PAT甲级-【题目+解答】汇总](https://blog.csdn.net/qq_34451909/article/details/105119913)

[PTA-浙大版《Python 程序设计》AC解答汇总](https://blog.csdn.net/qq_34451909/article/details/107907668)



GitHub：[https://github.com/monijuan/leetcode_python ](https://github.com/monijuan/leetcode_python)



### 【剑指 Offer】

[【剑指 Offer】03. 数组中重复的数字](https://blog.csdn.net/qq_34451909/article/details/120969636)
[【剑指 Offer】04. 二维数组中的查找](https://blog.csdn.net/qq_34451909/article/details/120988681)
[【剑指 Offer】05. 替换空格](https://blog.csdn.net/qq_34451909/article/details/120988714)
[【剑指 Offer】06. 从尾到头打印链表](https://blog.csdn.net/qq_34451909/article/details/120990134)
[【剑指 Offer】07. 重建二叉树](https://blog.csdn.net/qq_34451909/article/details/120990148)
[【剑指 Offer】09. 用两个栈实现队列](https://blog.csdn.net/qq_34451909/article/details/120969364)
[【剑指 Offer】10- I. 斐波那契数列](https://blog.csdn.net/qq_34451909/article/details/120990186)
[【剑指 Offer】10- II. 青蛙跳台阶问题](https://blog.csdn.net/qq_34451909/article/details/120990206)
[【剑指 Offer】11. 旋转数组的最小数字](https://blog.csdn.net/qq_34451909/article/details/121018507)
[【剑指 Offer】12. 矩阵中的路径](https://blog.csdn.net/qq_34451909/article/details/121018531)
[【剑指 Offer】13. 机器人的运动范围](https://blog.csdn.net/qq_34451909/article/details/121018577)
[【剑指 Offer】14- I. 剪绳子](https://blog.csdn.net/qq_34451909/article/details/121018600)
[【剑指 Offer】14- II. 剪绳子 II](https://blog.csdn.net/qq_34451909/article/details/121018619)
[【剑指 Offer】15. 二进制中1的个数](https://blog.csdn.net/qq_34451909/article/details/121027555)
[【剑指 Offer】16. 数值的整数次方](https://blog.csdn.net/qq_34451909/article/details/121027564)
[【剑指 Offer】17. 打印从1到最大的n位数](https://blog.csdn.net/qq_34451909/article/details/121027570)
[【剑指 Offer】18. 删除链表的节点](https://blog.csdn.net/qq_34451909/article/details/121027580)
[【剑指 Offer】19. 正则表达式匹配](https://blog.csdn.net/qq_34451909/article/details/121060116)
[【剑指 Offer】20. 表示数值的字符串](https://blog.csdn.net/qq_34451909/article/details/121060120)
[【剑指 Offer】21. 调整数组顺序使奇数位于偶数前面](https://blog.csdn.net/qq_34451909/article/details/121060126)
[【剑指 Offer】22. 链表中倒数第k个节点](https://blog.csdn.net/qq_34451909/article/details/121060130)
[【剑指 Offer】24. 反转链表](https://blog.csdn.net/qq_34451909/article/details/121122195)
[【剑指 Offer】25. 合并两个排序的链表](https://blog.csdn.net/qq_34451909/article/details/121122248)
[【剑指 Offer】26. 树的子结构](https://blog.csdn.net/qq_34451909/article/details/121122276)
[【剑指 Offer】27. 二叉树的镜像](https://blog.csdn.net/qq_34451909/article/details/121122323)
[【剑指 Offer】28. 对称的二叉树](https://blog.csdn.net/qq_34451909/article/details/121122397)
[【剑指 Offer】29. 顺时针打印矩阵](https://blog.csdn.net/qq_34451909/article/details/121159127)
[【剑指 Offer】30. 包含min函数的栈](https://blog.csdn.net/qq_34451909/article/details/121159139)
[【剑指 Offer】31. 栈的压入、弹出序列](https://blog.csdn.net/qq_34451909/article/details/121159154)
[【剑指 Offer】32 - I. 从上到下打印二叉树](https://blog.csdn.net/qq_34451909/article/details/121159170)
[【剑指 Offer】32 - II. 从上到下打印二叉树 II](https://blog.csdn.net/qq_34451909/article/details/121159188)
[【剑指 Offer】32 - III. 从上到下打印二叉树 III](https://blog.csdn.net/qq_34451909/article/details/121159212)
[【剑指 Offer】33. 二叉搜索树的后序遍历序列](https://blog.csdn.net/qq_34451909/article/details/121232610)
[【剑指 Offer】34. 二叉树中和为某一值的路径](https://blog.csdn.net/qq_34451909/article/details/121232638)
[【剑指 Offer】35. 复杂链表的复制](https://blog.csdn.net/qq_34451909/article/details/121232653)
[【剑指 Offer】36. 二叉搜索树与双向链表](https://blog.csdn.net/qq_34451909/article/details/121232673)
[【剑指 Offer】37. 序列化二叉树](https://blog.csdn.net/qq_34451909/article/details/121232683)
[【剑指 Offer】38. 字符串的排列](https://blog.csdn.net/qq_34451909/article/details/121232696)
[【剑指 Offer】39. 数组中出现次数超过一半的数字](https://blog.csdn.net/qq_34451909/article/details/121232712)
[【剑指 Offer】40. 最小的k个数](https://blog.csdn.net/qq_34451909/article/details/121232724)
[【剑指 Offer】41. 数据流中的中位数](https://blog.csdn.net/qq_34451909/article/details/121246679)
[【剑指 Offer】42. 连续子数组的最大和](https://blog.csdn.net/qq_34451909/article/details/121246717)
[【剑指 Offer】43. 1～n 整数中 1 出现的次数](https://blog.csdn.net/qq_34451909/article/details/121246727)
[【剑指 Offer】44. 数字序列中某一位的数字](https://blog.csdn.net/qq_34451909/article/details/121246746)
[【剑指 Offer】45. 把数组排成最小的数](https://blog.csdn.net/qq_34451909/article/details/121246759)
[【剑指 Offer】46. 把数字翻译成字符串](https://blog.csdn.net/qq_34451909/article/details/121263398)
[【剑指 Offer】47. 礼物的最大价值](https://blog.csdn.net/qq_34451909/article/details/121263414)
[【剑指 Offer】48. 最长不含重复字符的子字符串](https://blog.csdn.net/qq_34451909/article/details/121263434)
[【剑指 Offer】49. 丑数](https://blog.csdn.net/qq_34451909/article/details/121263442)
[【剑指 Offer】50. 第一个只出现一次的字符](https://blog.csdn.net/qq_34451909/article/details/121263451)
[【剑指 Offer】51. 数组中的逆序对](https://blog.csdn.net/qq_34451909/article/details/121282263)
[【剑指 Offer】52. 两个链表的第一个公共节点](https://blog.csdn.net/qq_34451909/article/details/121282278)
[【剑指 Offer】53 - I. 在排序数组中查找数字 I](https://blog.csdn.net/qq_34451909/article/details/121282287)
[【剑指 Offer】53 - II. 0～n-1中缺失的数字](https://blog.csdn.net/qq_34451909/article/details/121282305)
[【剑指 Offer】54. 二叉搜索树的第k大节点](https://blog.csdn.net/qq_34451909/article/details/121282327)
[【剑指 Offer】55 - I. 二叉树的深度](https://blog.csdn.net/qq_34451909/article/details/121282339)
[【剑指 Offer】55 - II. 平衡二叉树](https://blog.csdn.net/qq_34451909/article/details/121282358)
[【剑指 Offer】56 - I. 数组中数字出现的次数](https://blog.csdn.net/qq_34451909/article/details/121328332)
[【剑指 Offer】56 - II. 数组中数字出现的次数 II](https://blog.csdn.net/qq_34451909/article/details/121328370)
[【剑指 Offer】57 - II. 和为s的连续正数序列](https://blog.csdn.net/qq_34451909/article/details/121328380)
[【剑指 Offer】57. 和为s的两个数字](https://blog.csdn.net/qq_34451909/article/details/121328397)
[【剑指 Offer】58 - I. 翻转单词顺序](https://blog.csdn.net/qq_34451909/article/details/121328409)
[【剑指 Offer】58 - II. 左旋转字符串](https://blog.csdn.net/qq_34451909/article/details/121328422)
[【剑指 Offer】59 - I. 滑动窗口的最大值](https://blog.csdn.net/qq_34451909/article/details/121328443)
[【剑指 Offer】59 - II. 队列的最大值](https://blog.csdn.net/qq_34451909/article/details/121328458)
[【剑指 Offer】60. n个骰子的点数](https://blog.csdn.net/qq_34451909/article/details/121353008)
[【剑指 Offer】61. 扑克牌中的顺子](https://blog.csdn.net/qq_34451909/article/details/121353015)
[【剑指 Offer】62. 圆圈中最后剩下的数字](https://blog.csdn.net/qq_34451909/article/details/121353020)
[【剑指 Offer】63. 股票的最大利润](https://blog.csdn.net/qq_34451909/article/details/121353025)
[【剑指 Offer】64. 求1+2+…+n](https://blog.csdn.net/qq_34451909/article/details/121353032)
[【剑指 Offer】65. 不用加减乘除做加法](https://blog.csdn.net/qq_34451909/article/details/121353039)
[【剑指 Offer】66. 构建乘积数组](https://blog.csdn.net/qq_34451909/article/details/121379456)
[【剑指 Offer】67. 把字符串转换成整数](https://blog.csdn.net/qq_34451909/article/details/121379474)
[【剑指 Offer】68 - I. 二叉搜索树的最近公共祖先](https://blog.csdn.net/qq_34451909/article/details/121379488)[【剑指 Offer】68 - II. 二叉树的最近公共祖先](https://blog.csdn.net/qq_34451909/article/details/121379509)



### 【简单】

[模拟卷Leetcode【简单】001. 两数之和](https://blog.csdn.net/qq_34451909/article/details/120969284)





### 【普通】

[模拟卷Leetcode【普通】002. 两数相加_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121405916)
[模拟卷Leetcode【普通】003. 无重复字符的最长子串_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121405948)
[模拟卷Leetcode【普通】005. 最长回文子串_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121405963)
[模拟卷Leetcode【普通】008. 字符串转换整数 (atoi)_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121405981)
[模拟卷Leetcode【普通】015. 三数之和_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121406006)
[模拟卷Leetcode【普通】019. 删除链表的倒数第 N 个结点_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121465752)
[模拟卷Leetcode【普通】022. 括号生成_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121465766)
[模拟卷Leetcode【普通】024. 两两交换链表中的节点_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121465777)
[模拟卷Leetcode【普通】029. 两数相除_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121465793)
[模拟卷Leetcode【普通】036. 有效的数独_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121488738)
[模拟卷Leetcode【普通】038. 外观数列_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121488755)
[模拟卷Leetcode【普通】045. 跳跃游戏 II_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121488772)
[模拟卷Leetcode【普通】046. 全排列_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121488782)
[模拟卷Leetcode【普通】054. 螺旋矩阵_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121511017)
[模拟卷Leetcode【普通】055. 跳跃游戏_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121511061)
[模拟卷Leetcode【普通】056. 合并区间_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121511091)
[模拟卷Leetcode【普通】059. 螺旋矩阵 II_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121511107)
[模拟卷Leetcode【普通】062. 不同路径_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121562711)
[模拟卷Leetcode【普通】063. 不同路径 II_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121562745)
[模拟卷Leetcode【普通】064. 最小路径和_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/etails/121562773)
[模拟卷Leetcode【普通】073. 矩阵置零_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121562793)
[模拟卷Leetcode【普通】075. 颜色分类_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121602643)
[模拟卷Leetcode【普通】077. 组合_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121602670)
[模拟卷Leetcode【普通】079. 单词搜索_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121602773)
[模拟卷Leetcode【普通】082. 删除排序链表中的重复元素 II_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121602790)
[模拟卷Leetcode【普通】091. 解码方法_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121695297)
[模拟卷Leetcode【普通】096. 不同的二叉搜索树_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121695314)
[模拟卷Leetcode【普通】098. 验证二叉搜索树_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121695334)
[模拟卷Leetcode【普通】102. 二叉树的层序遍历_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121761504)
[模拟卷Leetcode【普通】105. 从前序与中序遍历序列构造二叉树_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121761521)
[模拟卷Leetcode【普通】116. 填充每个节点的下一个右侧节点指针_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121761539)
[模拟卷Leetcode【普通】120. 三角形最小路径和_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121792824)
[模拟卷Leetcode【普通】138. 复制带随机指针的链表_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121792861)
[模拟卷Leetcode【普通】139. 单词拆分_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121792875)
[模拟卷Leetcode【普通】142. 环形链表 II_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121849025)
[模拟卷Leetcode【普通】143. 重排链表_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121849041)
[模拟卷Leetcode【普通】151. 翻转字符串里的单词_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121849065)
[模拟卷Leetcode【普通】152. 乘积最大子数组_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121849078)
[模拟卷Leetcode【普通】153. 寻找旋转排序数组中的最小值_卷子的博客-CSDN博客](https://blog.csdn.net/qq_34451909/article/details/121849087)





###  utils

#### 做题脚本

- `test`：直接运行`getResult()`函数，这个函数的定义行可以直接复制题目中的`def`。
- `test_obj` ：是用于需要编写多个类方法的题目，可以根据输入`函数名（str）`找对应的函数名执行程序，并且兼容了是否有参数的情况。



```python
class Solution:
    def __init__(self):
        pass

    def getResult(self, args):
        return


def test(data_test):
    s = Solution()
    return s.getResult(*data_test)


def test_obj(data_test):
    result = [None]
    obj = Solution(*data_test[1][0])
    for fun, data in zip(data_test[0][1::], data_test[1][1::]):
        if data:
            res = obj.__getattribute__(fun)(*data)
        else:
            res = obj.__getattribute__(fun)()
        result.append(res)
    return result


if __name__ == '__main__':
    datas = [
        [],
    ]
    for data_test in datas:
        t0 = time.time()
        print('-' * 50)
        print('input:', data_test)
        print('output:', test(data_test))
        print(f'use time:{time.time() - t0}s')

```



#### 各种import

```python
from typing import List,Callable,Optional
```



#### 各种Node

```python
class Node_116:
    def __init__(self, val: int = 0, left: 'Node' = None, right: 'Node' = None, next: 'Node' = None):
        """116. 填充每个节点的下一个右侧节点指针"""
        self.val = val
        self.left = left
        self.right = right
        self.next = next

class Node_430:
    def __init__(self, val, prev, next, child):
        """430. 扁平化多级双向链表"""
        self.val = val
        self.prev = prev
        self.next = next
        self.child = child

class Node_559:
    def __init__(self, val=None, children=None):
        """559. N 叉树的最大深度"""
        self.val = val
        self.children = children


class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

    def __str__(self):
        return f"{str(self.val)}->{self.next}"

    def reverse(self,head,tail):
        """反转指定头尾部分的链表"""
        now_next = tail.next
        now = head
        while now_next!=tail:
            now.next, now, now_next = now_next, now.next, now
        return tail,head

class TreeNode:
    def __init__(self, val=0, left=None, right=None):
        self.val = val
        self.left = None
        self.right = None

    def __str__(self):
        res = f'[{self.val}({self.left},{self.right})]'
        return res
```



> 最近更新日期：2021.12.10